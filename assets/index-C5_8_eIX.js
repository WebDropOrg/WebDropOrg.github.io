(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))l(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const r of o.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&l(r)}).observe(document,{childList:!0,subtree:!0});function c(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function l(e){if(e.ep)return;e.ep=!0;const o=c(e);fetch(e.href,o)}})();console.log("=== MAIN.TSX STARTED ===");console.log("document.readyState:",document.readyState);console.log("document.body:",!!document.body);const t=document.getElementById("root");console.log("Root element found:",!!t);console.log("Root element:",t);t?(console.log("Root element type:",t.constructor.name),console.log("Root element nodeType:",t.nodeType),console.log("Root element tagName:",t.tagName),t.innerHTML="<h1>Element found and working!</h1>",console.log("Successfully added content to root element")):(console.error("Root element not found!"),document.body.innerHTML="<h1>Root element not found!</h1>");console.log("=== MAIN.TSX FINISHED ===");
